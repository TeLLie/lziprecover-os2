Requirements
------------
You will need a C++11 compiler. (gcc 3.3.6 or newer is recommended).
I use gcc 6.1.0 and 4.1.2, but the code should compile with any standards
compliant compiler.
Gcc is available at http://gcc.gnu.org.

Lzip 1.16 (or clzip 1.6) or newer is required to run the tests.

Unzcrash needs a 'zcmp' program able to understand the format being tested.
For example the zcmp provided by zutils.
Zutils is available at http://www.nongnu.org/zutils/zutils.html

The operating system must allow signal handlers read access to objects with
static storage duration so that the cleanup handler for Control-C can delete
the partial output file.


Procedure
---------
1. Unpack the archive if you have not done so already:

	tar -xf lziprecover[version].tar.lz
or
	lzip -cd lziprecover[version].tar.lz | tar -xf -

This creates the directory ./lziprecover[version] containing the source from
the main archive.

2. Change to lziprecover directory and run configure.
   (Try 'configure --help' for usage instructions).

	cd lziprecover[version]
	./configure

   If you are compiling on MinGW, use:

	./configure CXXFLAGS+='-D __USE_MINGW_ANSI_STDIO'

3. Run make.

	make

4. Optionally, type 'make check' to run the tests that come with lziprecover.

5. Type 'make install' to install the program and any data files and
   documentation.

   Or type 'make install-compress', which additionally compresses the
   info manual and the man page after installation.
   (Installing compressed docs may become the default in the future).

   You can install only the program, the info manual, or the man page by
   typing 'make install-bin', 'make install-info', or 'make install-man'
   respectively.

   Instead of 'make install', you can type 'make install-as-lzip' to
   install the program and any data files and documentation, and link
   the program to the name 'lzip'.


Another way
-----------
You can also compile lziprecover into a separate directory.
To do this, you must use a version of 'make' that supports the variable
'VPATH', such as GNU 'make'. 'cd' to the directory where you want the
object files and executables to go and run the 'configure' script.
'configure' automatically checks for the source code in '.', in '..', and
in the directory that 'configure' is in.

'configure' recognizes the option '--srcdir=DIR' to control where to
look for the sources. Usually 'configure' can determine that directory
automatically.

After running 'configure', you can run 'make' and 'make install' as
explained above.


Copyright (C) 2009-2021 Antonio Diaz Diaz.

This file is free documentation: you have unlimited permission to copy,
distribute, and modify it.
